---
# Rollback current PSU

- name: SI | get list of database names on host
  shell: cat /etc/oratab|grep {{ oracle_home }}|egrep ':N|:Y'|grep -v \*|cut -f1 -d':'
  register: dblist

- name: SI | shutdown databases running in oracle_home
  shell: export ORACLE_SID={{ item }}; echo "shutdown immediate;" | sqlplus / as sysdba
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  with_items: "{{ dblist.stdout_lines }}"

- name: SI | shutdown listener in oracle_home
  shell: "lsnrctl stop listener"
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  ignore_errors: true

- name: SI | Rollback PSU Specific One-off Patches
  shell: "opatch rollback -silent -id {{ item.patchid }}"
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  with_items: "{{ oneoff_patches[ psu[oracle_version][psu_name].patchversion ]|default([]) }}"
  when: oneoff_patches[ psu[oracle_version][psu_name].patchversion ] is defined
  register: oneoff_rollback
  ignore_errors: true

- debug: var=oneoff_rollback.results

- name: SI | Rollback PSU
  shell: "opatch rollback -silent -id {{ psu[oracle_version][psu_name][oracle_install_type].patchid }}"
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  register: opatch_rollback

- debug: var=opatch_rollback.stdout_lines

- name: SI | startup databases
  shell: export ORACLE_SID={{ item }}; echo "startup;" | sqlplus / as sysdba
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  with_items: "{{ dblist.stdout_lines }}"

- name: SI | startup pluggable databases (12c only)
  shell: export ORACLE_SID={{ item }}; echo "alter pluggable database all open;" | sqlplus / as sysdba
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  with_items: "{{ dblist.stdout_lines }}"
  when: oracle_version == '12.1.0.2'

- name: SI | run rollback sql script (11.2.0.4)
  shell: export ORACLE_SID={{ item }}; echo exit | sqlplus / as sysdba @catbundle_PSU_{{ item }}_ROLLBACK.sql
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  with_items: "{{ dblist.stdout_lines }}"
  args:
    chdir: "{{ oracle_home }}/rdbms/admin"
  when: oracle_version == '11.2.0.4'
  register: catbundle

# - debug: var=catbundle.results # too much output to be useful

- name: SI | Run the datapatch utility (12.1.0.2)
  shell: "export ORACLE_SID={{ item }}; datapatch -verbose"
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  register: datapatch
  with_items: "{{ dblist.stdout_lines }}"
  when: oracle_version == '12.1.0.2'

- debug: var=datapatch.stdout_lines
  when: oracle_version == '12.1.0.2'

- name: Check opatch lsinventory (DB)
  shell: "opatch lsinventory"
  become_user: "{{ oracle_user }}"
  environment: "{{ env }}"
  register: opatchls

- debug: var=opatchls.stdout_lines
